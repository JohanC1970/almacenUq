package Almacen.controller;

import java.net.URL;
import java.util.ResourceBundle;

import Almacen.application.Aplicacion;
import Almacen.model.Almacen;
import Almacen.model.Cliente;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.KeyEvent;
import javafx.stage.Stage;

public class ClienteController implements Initializable{

	ModelFactoryController mfm = ModelFactoryController.getInstance();

    @FXML
    private ResourceBundle resources;

    @FXML
    private URL location;

    @FXML
    private Label lblNit;

    @FXML
    private Label lblFechaNacimiento;

    @FXML
    private TextField txtDireccion;

    @FXML
    private TextField txtEmail;

    @FXML
    private TableColumn<Cliente,String> columnApellido;

    @FXML
    private Label lblEmail;

    @FXML
    private TextField txtNit;

    @FXML
    private TableColumn<Cliente,String> columnNombre;

    @FXML
    private DatePicker dateFecha;

    @FXML
    private TextField txtIdentificacion;

    @FXML
    private TableColumn<Cliente, String> columnTipoCliente;

    @FXML
    private TableView<Cliente> tableClientes;

    @FXML
    private TableColumn<Cliente,String> columnTelefono;

    @FXML
    private TextField txtNombre;

    @FXML
    private TableColumn<Cliente,String> columnIdentificacion;

    @FXML
    private Button btnEliminar;

    @FXML
    private TextField txtTelefono;

    @FXML
    private TextField txtApellido;

    @FXML
    private ComboBox<String> comBoxTipoCliente;

    @FXML
    private Button btnRegistrar;

    @FXML
    private Button btnActualizar;

    private Stage stage;

    private Aplicacion aplicacion;

    private Cliente clienteSeleccionado;

    private Almacen almacen;


	@Override
	public void initialize(URL location, ResourceBundle resources) {

		this.columnNombre.setCellValueFactory(new PropertyValueFactory<>("nombre"));
		this.columnApellido.setCellValueFactory(new PropertyValueFactory<>("apellidos"));
		this.columnIdentificacion.setCellValueFactory(new PropertyValueFactory<>("identificacion"));
		this.columnTelefono.setCellValueFactory(new PropertyValueFactory<>("telefono"));

		//SELECCION EN LA TABLA DE CLIENTES
		tableClientes.getSelectionModel().selectedItemProperty().addListener((obs, oldSelection, newSelection) -> {
			if(newSelection != null) {
				clienteSeleccionado = newSelection;
				mostrarInformacionCliente();
				}
			});


	}

    private void mostrarInformacionCliente() {
		// TODO Auto-generated method stub

	}

	/**
     * Este evento es para validar que solo ingresen numeros en los respectivos campos de texto
     * @param event
     */
    @FXML
    void validarIngresoNumeros(KeyEvent event) {
    	if(event.getTarget() == txtIdentificacion){
			if(!Character.isDigit(event.getCharacter().charAt(0))){
				event.consume();
			}
		}
    	if(event.getTarget() == txtTelefono){
			if(!Character.isDigit(event.getCharacter().charAt(0))){
				event.consume();
			}
		}
    }

    @FXML
    void eliminarCliente(ActionEvent event) {

    }

    @FXML
    void actualizarCliente(ActionEvent event) {

    }

    @FXML
    void registrarCliente(ActionEvent event) {

    }


}
